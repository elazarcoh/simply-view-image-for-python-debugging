{
  "publisher": "elazarcoh",
  "name": "simply-view-image-for-python-debugging",
  "displayName": "View Image for Python Debugging",
  "version": "4.0.17",
  "packageManager": "yarn@4.4.1",
  "description": "simply view the image of the image variables when debugging python",
  "repository": {
    "type": "git",
    "url": "https://github.com/elazarcoh/simply-view-image-for-python-debugging"
  },
  "keywords": [
    "Python",
    "image",
    "debug",
    "plot",
    "view",
    "opencv",
    "Pillow",
    "matplotlib",
    "tensor",
    "debugging",
    "preview",
    "watch",
    "viewer",
    "numpy",
    "PIL"
  ],
  "categories": [
    "Other"
  ],
  "main": "./dist/extension.js",
  "icon": "icon.png",
  "preview": false,
  "engines": {
    "vscode": "^1.63.0"
  },
  "activationEvents": [
    "onDebugResolve:python",
    "onDebugResolve:debugpy",
    "onDebugResolve:Python Kernel Debug Adapter",
    "onNotebook:jupyter-notebook",
    "onNotebook:interactive",
    "onWebviewPanel:jupyter-variables",
    "onWebviewPanel:jupyter"
  ],
  "contributes": {
    "jupyterVariableViewers": [
      {
        "command": "svifpd.view-jupyter-debug-variable",
        "title": "Open with View Image for Python Debugging",
        "dataTypes": [
          "ndarray",
          "Tensor"
        ]
      }
    ],
    "commands": [
      {
        "command": "svifpd.run-setup",
        "title": "Run Setup",
        "enablement": "inDebugMode",
        "category": "Debug View Python",
        "icon": "$(code)"
      },
      {
        "command": "svifpd.view-image-track",
        "title": "Track Image",
        "enablement": "inDebugMode",
        "category": "Debug View Python"
      },
      {
        "command": "svifpd.view-image",
        "title": "View Image",
        "enablement": "inDebugMode",
        "category": "Debug View Python"
      },
      {
        "command": "svifpd.watch-view-image",
        "title": "View Image",
        "enablement": "inDebugMode",
        "icon": "$(svifpd-image)"
      },
      {
        "command": "svifpd.watch-view-plot",
        "title": "View Plot",
        "enablement": "inDebugMode",
        "icon": "$(graph)"
      },
      {
        "command": "svifpd.watch-view-tensor",
        "title": "View Tensor",
        "enablement": "inDebugMode",
        "icon": "$(svifpd-tensor)"
      },
      {
        "command": "svifpd.watch-track-enable",
        "title": "Track - Enable",
        "enablement": "inDebugMode",
        "icon": "$(eye)"
      },
      {
        "command": "svifpd.watch-track-disable",
        "title": "Track - Disable",
        "enablement": "inDebugMode",
        "icon": "$(eye-closed)"
      },
      {
        "command": "svifpd.watch-refresh",
        "title": "Refresh",
        "enablement": "inDebugMode",
        "icon": "$(timeline-refresh)"
      },
      {
        "command": "svifpd.open-image-webview",
        "title": "Open Image Webview",
        "icon": "$(browser)"
      },
      {
        "command": "svifpd.open-settings",
        "title": "Configure...",
        "icon": "$(settings-gear)"
      },
      {
        "command": "svifpd.update-frame-id",
        "title": "Update Frame ID",
        "enablement": "inDebugMode",
        "category": "Debug View Python"
      },
      {
        "command": "svifpd.view-debug-variable",
        "title": "View as Image",
        "enablement": "inDebugMode"
      },
      {
        "command": "svifpd.add-expression",
        "title": "Add Expression",
        "category": "Debug View Python"
      },
      {
        "command": "svifpd.edit-expression",
        "title": "Edit Expression",
        "icon": "$(edit)"
      },
      {
        "command": "svifpd.remove-expression",
        "title": "Remove Expression",
        "icon": "$(close)"
      },
      {
        "command": "svifpd.remove-all-expressions",
        "title": "Remove All Expression",
        "icon": "$(close-all)"
      },
      {
        "command": "svifpd.disable-plugin",
        "title": "Disable Plugin",
        "category": "Debug View Python"
      },
      {
        "command": "svifpd.update-diagnostics",
        "title": "Update Diagnostics",
        "enablement": "inDebugMode",
        "icon": "$(circuit-board)"
      },
      {
        "command": "svifpd.open-file-image",
        "title": "Extended Preview",
        "icon": "$(svifpd-inspect-image)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "svifpd.run-setup",
          "when": "inDebugMode"
        },
        {
          "command": "svifpd.watch-view-image",
          "when": "false"
        },
        {
          "command": "svifpd.watch-view-plot",
          "when": "false"
        },
        {
          "command": "svifpd.watch-view-tensor",
          "when": "false"
        },
        {
          "command": "svifpd.watch-track-enable",
          "when": "false"
        },
        {
          "command": "svifpd.watch-track-disable",
          "when": "false"
        },
        {
          "command": "svifpd.watch-refresh",
          "when": "false"
        },
        {
          "command": "svifpd.open-settings",
          "when": "false"
        },
        {
          "command": "svifpd.open-image-webview",
          "when": "inDebugMode"
        },
        {
          "command": "svifpd.view-debug-variable",
          "when": "false"
        },
        {
          "command": "svifpd.edit-expression",
          "when": "false"
        },
        {
          "command": "svifpd.remove-expression",
          "when": "false"
        },
        {
          "command": "svifpd.remove-all-expressions",
          "when": "false"
        },
        {
          "command": "svifpd.update-diagnostics",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "svifpd.watch-refresh",
          "when": "view == pythonDebugImageWatch",
          "group": "navigation@10"
        },
        {
          "command": "svifpd.remove-all-expressions",
          "when": "view == pythonDebugImageWatch",
          "group": "navigation@20"
        },
        {
          "command": "svifpd.open-settings",
          "when": "view == pythonDebugImageWatch",
          "group": "navigation@30"
        },
        {
          "command": "svifpd.open-image-webview",
          "when": "view == pythonDebugImageWatch",
          "group": "navigation@40"
        }
      ],
      "debug/variables/context": [
        {
          "command": "svifpd.view-debug-variable",
          "group": "1_view",
          "when": "debugProtocolVariableMenuContext == viewableInGraphicViewer"
        }
      ],
      "view/item/context": [
        {
          "command": "svifpd.watch-view-image",
          "when": "view == pythonDebugImageWatch && viewItem =~ /svifpd:nonTrackedVariable-.*?image.*/ || view == pythonDebugImageWatch && viewItem =~ /svifpd:trackedVariable-.*?image.*/",
          "group": "inline@11"
        },
        {
          "command": "svifpd.watch-view-plot",
          "when": "view == pythonDebugImageWatch && viewItem =~ /svifpd:nonTrackedVariable-.*?plot.*/ || view == pythonDebugImageWatch && viewItem =~ /svifpd:trackedVariable-.*?plot.*/",
          "group": "inline@12"
        },
        {
          "command": "svifpd.watch-view-tensor",
          "when": "view == pythonDebugImageWatch && viewItem =~ /svifpd:nonTrackedVariable-.*?tensor.*/ || view == pythonDebugImageWatch && viewItem =~ /svifpd:trackedVariable-.*?tensor.*/",
          "group": "inline@13"
        },
        {
          "command": "svifpd.watch-track-enable",
          "when": "view == pythonDebugImageWatch && viewItem =~ /svifpd:nonTrackedVariable-.*/",
          "group": "inline@30"
        },
        {
          "command": "svifpd.watch-track-disable",
          "when": "view == pythonDebugImageWatch && viewItem =~ /svifpd:trackedVariable-.*/",
          "group": "inline@31"
        },
        {
          "command": "svifpd.edit-expression",
          "when": "view == pythonDebugImageWatch && viewItem =~ /svifpd:.*-expressionItem/",
          "group": "inline@20"
        },
        {
          "command": "svifpd.remove-expression",
          "when": "view == pythonDebugImageWatch && viewItem =~ /svifpd:.*-expressionItem/",
          "group": "inline@21"
        },
        {
          "command": "svifpd.update-diagnostics",
          "when": "view == pythonDebugImageWatch && viewItem == svifpd:diagnosticsRoot",
          "group": "inline@10"
        },
        {
          "command": "svifpd.run-setup",
          "when": "view == pythonDebugImageWatch && viewItem == svifpd:diagnosticsRoot",
          "group": "inline@20"
        }
      ],
      "editor/title": [
        {
          "command": "svifpd.open-file-image",
          "when": "resourceScheme == file && resourceExtname =~ /.png|.jpg|.jpeg|.bmp|.tiff/ && activeCustomEditorId != svifpd.previewEditor",
          "group": "navigation"
        }
      ]
    },
    "views": {
      "debug": [
        {
          "id": "pythonDebugImageWatch",
          "name": "Image Watch",
          "icon": "eye",
          "visibility": "visible",
          "type": "tree"
        }
      ]
    },
    "keybindings": [
      {
        "command": "svifpd.view-image",
        "key": "ctrl+alt+q",
        "when": "inDebugMode"
      }
    ],
    "configuration": {
      "title": "View Image (Python Debug)",
      "properties": {
        "svifpd.addViewContextEntryToVSCodeDebugVariables": {
          "type": "boolean",
          "default": true,
          "description": "Whether to show a context menu entry in VSCode debug variables view for custom objects (currently only plots)."
        },
        "svifpd.allowPlugins": {
          "type": "boolean",
          "default": false,
          "description": "Whether to allow plugins to register their own viewables."
        },
        "svifpd.autoUpdateImages": {
          "type": [
            "boolean",
            "string"
          ],
          "enum": [
            true,
            false,
            "pinned"
          ],
          "default": true,
          "description": "Automatically update images when variables change during debugging. When disabled, images will only update when manually refreshed. When set to 'pinned', only pinned images will auto-update."
        },
        "svifpd.customSavePath": {
          "type": "string",
          "default": "undefined",
          "description": "Custom path to save images. Only used if `svifpd.saveLocation` is set to `custom`."
        },
        "svifpd.debug": {
          "type": "string",
          "enum": [
            "none",
            "debug",
            "verbose"
          ],
          "default": "none",
          "description": "Enable debug mode (show debug info in `View Image for Python` output)"
        },
        "svifpd.matplotlibUseAgg": {
          "type": "boolean",
          "default": false,
          "description": "Whether to run matplotlib.use('agg') to avoid display error. Can be useful for working remotely over ssh etc."
        },
        "svifpd.normalizationMethod": {
          "type": "string",
          "enum": [
            "normalize",
            "skimage.img_as_ubyte",
            "None"
          ],
          "enumDescriptions": [
            "First subtracts the minimal value, and then scale the values between [0, 255]",
            "Negative input values will be clipped. Positive values are scaled between 0 and 255.",
            "Image saved as is, behavior as specified for the backend."
          ],
          "default": "normalize",
          "description": "Image normalization method: The image pixels must be in [0, 255] to be saved correctly. For that, we perform a normalization before save is being called. For more information, see the description for each method."
        },
        "svifpd.preferredBackend": {
          "type": "string",
          "enum": [
            "opencv",
            "imageio",
            "Pillow",
            "Standalone"
          ],
          "default": "Standalone",
          "description": "Preferred backend package to save the image with. Automatically falls back to one of the other."
        },
        "svifpd.restrictImageTypes": {
          "type": "boolean",
          "default": true,
          "description": "Restrict image types to numpy.ndarray/PIL.Image only"
        },
        "svifpd.saveLocation": {
          "type": "string",
          "enum": [
            "tmp",
            "extensionStorage",
            "custom"
          ],
          "default": "tmp",
          "description": "Location to save images."
        },
        "svifpd.showDiagnosticInfoInTreeView": {
          "type": "boolean",
          "default": false,
          "description": "Show supported types diagnostic information in the tree view (mainly for debugging)."
        },
        "svifpd.tensorsInViewer": {
          "type": "boolean",
          "default": true,
          "description": "Whether to show tensors in the viewer."
        },
        "svifpd.useExperimentalDataTransfer": {
          "type": "boolean",
          "default": true,
          "description": "Whether to use the new data-transfer protocol (using a socket server, instead of a file)."
        },
        "svifpd.useExperimentalViewer": {
          "type": "boolean",
          "default": true,
          "description": "Whether to use the new experimental viewer."
        },
        "svifpd.useTmpPathToSave": {
          "type": "boolean",
          "default": true,
          "description": "Use the system tmp path to save image otherwise use the storage path.",
          "deprecated": true,
          "deprecationMessage": "Use `svifpd.saveLocation` instead."
        },
        "svifpd.viewerUi.invertMouseWheelZoom": {
          "type": "boolean",
          "default": false,
          "description": "Invert mouse wheel zoom direction in the image viewer."
        }
      }
    },
    "customEditors": [
      {
        "viewType": "svifpd.previewEditor",
        "displayName": "Image View",
        "priority": "option",
        "selector": [
          {
            "filenamePattern": "*.png"
          },
          {
            "filenamePattern": "*.jpg"
          },
          {
            "filenamePattern": "*.jpeg"
          },
          {
            "filenamePattern": "*.bmp"
          },
          {
            "filenamePattern": "*.tiff"
          }
        ]
      }
    ],
    "icons": {
      "svifpd-tensor": {
        "description": "Tensor",
        "default": {
          "fontPath": "dist/svifpd-icons.woff2",
          "fontCharacter": "\\ea6c"
        }
      },
      "svifpd-image": {
        "description": "Image",
        "default": {
          "fontPath": "dist/svifpd-icons.woff2",
          "fontCharacter": "\\ea6d"
        }
      },
      "svifpd-inspect-image": {
        "description": "Inspect Image",
        "default": {
          "fontPath": "dist/svifpd-icons.woff2",
          "fontCharacter": "\\ea6e"
        }
      }
    }
  },
  "scripts": {
    "webview:install": "cd src/webview-ui && cargo fetch",
    "postinstall": "yarn run webview:install",
    "update-package-json": "update-package-json",
    "build:prod": "webpack --mode production --config webpack.config.prod.mjs",
    "build:webview": "webpack --mode development  --config webpack.webview.config.mjs",
    "build:extension": "webpack --mode development  --config webpack.extension.config.mjs",
    "build": "webpack --mode development",
    "watch": "webpack --mode development --watch",
    "vscode:prepublish": "yarn run clean && yarn run build:prod",
    "package": "vsce package",
    "package:pre-release": "vsce package --pre-release",
    "install-extension": "vsce package -o svifpd.vsix && code --install-extension svifpd.vsix",
    "lint": "eslint . --config eslint.config.mjs",
    "lint:fix": "eslint . --config eslint.config.mjs --fix",
    "clean": "rimraf dist src/webview-ui/pkg"
  },
  "dependencies": {
    "@jupyterlab/services": "^7.3.5",
    "@vscode/codicons": "^0.0.36",
    "@vscode/jupyter-extension": "^1.1.1",
    "exifreader": "^4.26.1",
    "jimp": "^1.6.0",
    "lodash": "^4.17.21",
    "parsimmon": "^1.18.1",
    "reflect-metadata": "^0.2.2",
    "ts-results": "^3.3.0",
    "typedi": "^0.10.0",
    "vscode-debugprotocol": "^1.51.0",
    "vscode-extensions-json-generator": "^0.2.2"
  },
  "devDependencies": {
    "@antfu/eslint-config": "^5.2.1",
    "@eslint/js": "^9.20.0",
    "@types/lodash": "^4.17.15",
    "@types/node": "^18.11.15",
    "@types/parsimmon": "^1.10.9",
    "@types/vscode": "^1.60.0",
    "@typescript-eslint/eslint-plugin": "^8.24.0",
    "@typescript-eslint/parser": "^8.24.0",
    "@vscode/vsce": "^3.2.2",
    "@wasm-tool/wasm-pack-plugin": "patch:@wasm-tool/wasm-pack-plugin@npm%3A1.7.0#~/.yarn/patches/@wasm-tool-wasm-pack-plugin-npm-1.7.0-05c10ff10e.patch",
    "copy-webpack-plugin": "^12.0.2",
    "eslint": "^9.33.0",
    "eslint-plugin-format": "^1.0.1",
    "eslint-webpack-plugin": "^4.2.0",
    "globals": "^15.14.0",
    "html-webpack-plugin": "^5.6.0",
    "lethargy-ts": "^0.1.0",
    "lodash-cli": "^4.17.5",
    "mini-css-extract-plugin": "^2.9.1",
    "rimraf": "^6.0.1",
    "text-encoding": "^0.7.0",
    "ts-loader": "^9.5.1",
    "typescript": "^5.6.2",
    "typescript-eslint": "^8.24.0",
    "wasm-pack": "^0.13.1",
    "webpack": "^5.97.1",
    "webpack-cli": "^5.1.4",
    "webpack-shell-plugin-next": "^2.3.2"
  }
}
